# Author: ichivite@esri.com
# Tested with ArcGIS for Server 10.2.2
# Latest here: https://github.com/Cintruenigo/ArcGIS-Server-Stuff/blob/master/BurstOfHttpRequests

import os, arcpy, Queue,threading,time
import urllib
import urllib2

urlFilePath = r"D:\Ismael\Demos\AdminAPI\urls.txt"         #Text file containing the URLs you want to be hit. One URL per line
thread_count = 80                                          #Number of threads to process your file
urlQueue = Queue.Queue()

def main():

    #Fill Queue containing all urls to be invoked
    urlFile = open( urlFilePath, "r" )
    for line in urlFile:
        urlQueue.put(line)
    urlFile.close()
                
                   
    # Create a pool of threads
    thread_list = []
    for i in range (thread_count):
        name = str(i)
        print name
        t = threading.Thread(target=requestURL)
        t.daemon = True
        thread_list.append(t)

    # Start threads
    for thread in thread_list:
        print " Starting new thread... "
        thread.start()

    # Wait for queue to be emptied
    urlQueue.join()

def requestURL():
    while urlQueue.empty :
        try:
            url = urlQueue.get()
            params = { 'f' : 'pjson'}
            qData = urllib.urlencode(params)
            req = urllib2.Request(url, qData, {'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
            response = urllib2.urlopen(req)
            #print "Response: " + response.read()
            urlQueue.task_done()
        except Exception as e:
            print e.message
        
if __name__ == "__main__":
     main()
